FLY.IO
Use environment variables - secrets to configure local vs online environments
Check if SECRET_KEY is needed in config.py and if it's safe
IN PROGRESS - Check if permanent database on volume storage is actually being used
IN PROGRESS - Check if Upstash Redis is actually being used
   CURRENT STATUS: Redis is being run as a local session. This means that as soon as the machine is stopped,
   the session data disappears. This might happen while the user is trying to modify a book. Uploaded books
   are on permanent storage, but in a working directory that is emptied on app startup.
   OPTION 1 - DONE: Keep as is. This will require modifying idle status to either keep the VM running longer after
   the site last gets traffic, or so that the VM never stops at all (about 5$/month).
   OPTION 2: Move Redis to Upstash and only delete files in working directory that are older than an hour.
   This would allow the machine to go idle as necessary without losing data, but might cost more because
   of Redis Upstash fees.
   CURRENT CHOICE: Option 1 should be cheaper, though this has not been tested. But if more machines are added,
   it might be cheaper to implement Option 2.
Update with latest changes if needed

BUGS

NAMES & PRONOUNS


SECURITY
https://flask.palletsprojects.com/en/3.0.x/security/
https://github.com/GoogleCloudPlatform/flask-talisman
https://flask-seasurf.readthedocs.io/en/latest/


HTML / CSS
Prepopulate known-names with appropriate suggestions


CLEANUP
Remove debugging print calls and console.logs



DEGENDERING FEATURES


OTHER IMPROVEMENTS


DEGENDERING HTML CONTENT
Add time estimate for degendering
Base time on words in book / words in all_matches
Base time on last five degender speed ratios 50-25-13-8-4



DEGENDERING IMPROVEMENTS



		 
EXTRAS
Validate the process_epub function - replace first part with epub validation
	     		  	  	 	 pip install epubcheck




IMPLEMENTED CHANGES

DONE - Explain why they stays singular for verbs
DONE - Change Female Pronouns / Male Pronouns to Female Characters / Male Characters (for books at least)
DONE - Track book degendering time - this way we can track them and test if changes are worth it
DONE - Create database with book size (by number of characters, words?) and degendering time for original filename
       METHOD: Added info to processed_books.db
DONE - Degendering count update take place for every modification instead of every book / user combination
DONE - Check if first modification doesn't work properly
     HYPOTHESIS - maybe latest_filepath isn't defined for some reason?
     ACTUAL PROBLEM - This was never designed properly. We need to add the number of pronouns to our
     	     	      all_matches comparison to get a comparison that makes sense
NOT DONE - Add quick - thorough (synonym?) options for degendering with approximate times for each
    NOT WORTH IT YET - If reference.xlsx were to get much longer, eventually this could be an option,
    	      	       but for now a majority of words would be included even in the turbo version
DONE - Check if start from scratch still works (yes it was still working)
DONE - Samples now also uses new processing page
DONE - Add progress bar using soups degendered percentage - Too complex to be worth it
       	   Turns out it is worth it online because wait times are longer
	   CURRENT STATUS - Websocket disconnects on POST request and can't reconnect because
	   it's waiting on process_book to finish
	   PLANNED SOLUTION - Change process_book to a thread so it doesn't block websocket connection
	   ACTUAL SOLUTION - Ditched flask-socketio for flask-sse, use gevent for background task
DONE - Document code
DONE - Make site mobile-friendly
DONE - Add back button to done page
DONE - Add start over button to done page
DONE - Have pronouns pre-filled when modifying
DONE - Degendering times for book is incorrect when modifying - adds to previous time
DONE - Fix the extra _ff when modifying
DONE - Check if we can remove the Title + Upper case to user additions since they
       are already created in degenderer.create_name_dict()
DONE - Make sure modifying a book is actually quicker than starting from scratch
DONE - Make modifying books more efficient
       Modify code to make it work with following cases:
       	 	New word (match from old dict)
		Modified word (match from latest dict)
		Removed word (reverse match from latest dict)
       Any rare problems this creates (multiplying duplicate names, for example) become
       the user's responsibility and they can just press the new button to fix them
DONE - Implement permanent storage
NOT DONE - Figure out why the text is more centered in pronouns and known names (do I really care?)
DONE - Test with gunicorn
NOT DONE - Upload and temp directory should be cleared after 24 hours - AWS Cloudwatch + Lambda?
    	   Not needed since not in permanent storage on fly.io
DONE - Session cookies get pretty large - Might be better to save more data locally
       SOLUTION: Switch to flask-sessions and Redis
DONE - It should be possible to create samples from text degendering so that people
       can create examples for copyrighted books
DONE - Samples always show up in same order
DONE - Text samples don't show up in samples.html
DONE - Line breaks don't show up in samples
DONE - Samples processing message always shows up in sample one
DONE - Going back in text doesn't work once text has been degendered
DONE - Going back and clearing a name correspondence should actually clear it
DONE - Check cookie size to see if it's large - would make running the server more expensive
DONE - Track download count of samples
DONE - Session cookie too big - 5k max?
       SOLUTION - This was because of all sample data being inside session cookie
DONE - Samples should not repeat before all have been displayed
       Reworked samples with fixed random order, more and previous pages
DONE - manly - womanly - personly
DONE - sir'ram'ram is back - Mrs. Dalloway
DONE - Count of books degendered
DONE - Check IP - for count of books only
DONE - Add more book samples
NOT DONE - Check if boy and girl have different nb equivalent (forgot why I asked myself this?)
DONE - Good names for Brokeback: Myrtle & Mandy
DONE - Add more non-binary names
NOT DONE - Add terms for genitals - cock, pussy, etc. (this is too personal + animal names)
DONE - bloke - lass - landlord - landlady
DONE - master - mistress (is this not already there?)
DONE - Churchman - Churchwoman - Witch - Wizard - fatherland - motherland
DONE - mistresses - misters ? lovers /
DONE - Lord - Almighty? Only for the Lord... Otherwise Lady and ?
DONE - Remove Count (counting) - or make it match case?
DONE - Add Herr - Frau - Monsieur - Madame - Senor - Senora - Signor - Signora
DONE - Add Englishman - woman, Frenchman - woman, etc
DONE - Add Don and Kent to Warning
DONE - Add back button so people can change things from previous page
DONE - Schoolmistress should be schoolteacher - not schoolteachers
DONE - Unkwnown now works with all cases - lower/upper/title
       Known names only works with matched capitalization - this is good I think
DONE - Have some pronouns only be degendered when capitalized: e.g. "Miss"
DONE - Changed pronouns and name storage from JSON files to a single Excel file for manual editing
       Modified degenderer.py to work with dfs instead of lists of lists
DONE - Fix them showing up instead of their (for him/his I think)
DONE - Let the user modify their choices instead of starting from scratch
       Simple solution: browser back button
DONE - Add a submit page - Created an sqllite3 db to store them
       Submit page: Book name - Author - Short excerpt - Webpage - Parameters
DONE - Make sure all her/hers are gone
DONE - Transpose same method for identifying warning names from book to text - Avoid dupe code
DONE - Loading page stopped working
DONE - Add a favorite pronouns page - only when non-binary
DONE - Change potential name page to warning page explaining that these might not be names
DONE - Add text to explain limitations
DONE - Add text to Unknown Names explain where to change pronouns
DONE - Combined book + text get names methods
DONE - Make sure potential names show up in order of most appearances
DONE - Degendering times went back up - figure out what version this happened in and what change caused it.
DONE - Don't show Known Names or Unknown names if no names
DONE - Make sure the names in potential names aren't already taken care of by the pronoun list
DONE - Create warning name list
DONE - Warn for common names in potential name list
DONE - Add a download page to tell the user they can keep browsing until their book is ready
DONE - Check ways to make conversion faster
       	     Title + Upper case pronouns added a lot of time

DONE - Improve tracking of names that have already been used
   DONE - Fixed dupes for known names
   DONE - Potential names should know about known names

DONE - Pressing upload button with no file selected should do nothing
DONE - Add a clear button to the suggestions
DONE - Make sure 's possessives are degendered/regendered - hard code if necessary
DONE - Commander's --> Commanderessa's
DONE - Add text box
   DONE - Web logic implemented
   DONE - Degender text logic with process_text function
   DONE - Conform text-upload and text-display look and functionality (HTML + CSS)
   DONE - Add text-upload to top menu

DONE - Add search box to go directly to Gutenberg Project search results.
DONE - Don't suggest names that have been suggested
DONE - Add a All F - All NB - ALL M at the top
DONE - Check if get_paragraph_text and set_paragraph_text should work differently
       for <p> and <div>
       Wasn't necessary to fix the bug but they are now still separate
DONE - Check if using p.contents (and d.contents?) can fix the formatting issues
DONE - Fix the messed up formatting in Romeo and Juliet that loses the line return
       after the capital name
DONE - JULIET --> MARION
DONE - Replacement of lower case - title case - upper case at once

BETTER SOLUTION FOUND - Add <text> tag to conversion - possibly inside <navLabel>
BETTER SOLUTION FOUND - Add <td> tag to conversion
BETTER SOLUTION FOUND - Add <i> tag to conversion

CANCELLED - Add PDF - Too complicated to do correctly


Names to non-binarize:

DONE - Mistress - Master
DONE - Guys - Guy
DONE - Dad
DONE - Maid
DONE - Friar
DONE - daddy
DONE - master - mistress
DONE - girl/boy to kid instead of youth
DONE - madman/madwoman
DONE - kinsman/kinsmen
DONE - nobleman/noblemen
DONE - allmother/allfather


Names to add to common words:
DONE - Will
DONE - All months
DONE - All seasons
DONE - All flowers
DONE - Joy
DONE - Pearl
DONE - Christian
